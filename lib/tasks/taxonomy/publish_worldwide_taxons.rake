namespace :taxonomy do
  desc "Publish taxons for worldwide taxonomy"
  task publish_taxons_for_worldwide_taxonomy: :environment do
    countries = [
      "/world/afghanistan",
      "/world/albania",
      "/world/algeria",
      "/world/angola",
      "/world/anguilla",
      "/world/argentina",
      "/world/armenia",
      "/world/australia",
      "/world/austria",
      "/world/azerbaijan",
      "/world/bahrain",
      "/world/bangladesh",
      "/world/barbados",
      "/world/belarus",
      "/world/belgium",
      "/world/belize",
      "/world/bolivia",
      "/world/bosnia-and-herzegovina",
      "/world/botswana",
      "/world/brazil",
      "/world/british-antarctic-territory",
      "/world/british-virgin-islands",
      "/world/brunei",
      "/world/bulgaria",
      "/world/burma",
      "/world/cambodia",
      "/world/cameroon",
      "/world/canada",
      "/world/cayman-islands",
      "/world/chile",
      "/world/china",
      "/world/colombia",
      "/world/costa-rica",
      "/world/croatia",
      "/world/cuba",
      "/world/cyprus",
      "/world/czech-republic",
      "/world/democratic-republic-of-the-congo",
      "/world/denmark",
      "/world/dominican-republic",
      "/world/ecuador",
      "/world/egypt",
      "/world/eritrea",
      "/world/estonia",
      "/world/ethiopia",
      "/world/fiji",
      "/world/finland",
      "/world/france",
      "/world/gambia",
      "/world/georgia",
      "/world/germany",
      "/world/ghana",
      "/world/greece",
      "/world/guatemala",
      "/world/guyana",
      "/world/holy-see",
      "/world/honduras",
      "/world/hong-kong",
      "/world/hungary",
      "/world/iceland",
      "/world/india",
      "/world/indonesia",
      "/world/iran",
      "/world/iraq",
      "/world/ireland",
      "/world/israel",
      "/world/italy",
      "/world/jamaica",
      "/world/japan",
      "/world/jordan",
      "/world/kazakhstan",
      "/world/kenya",
      "/world/kosovo",
      "/world/kuwait",
      "/world/laos",
      "/world/latvia",
      "/world/lebanon",
      "/world/libya",
      "/world/lithuania",
      "/world/luxembourg",
      "/world/macedonia",
      "/world/madagascar",
      "/world/malawi",
      "/world/malaysia",
      "/world/maldives",
      "/world/mali",
      "/world/malta",
      "/world/mauritius",
      "/world/mexico",
      "/world/moldova",
      "/world/mongolia",
      "/world/montenegro",
      "/world/montserrat",
      "/world/morocco",
      "/world/mozambique",
      "/world/namibia",
      "/world/nepal",
      "/world/netherlands",
      "/world/new-zealand",
      "/world/nigeria",
      "/world/north-korea",
      "/world/norway",
      "/world/oman",
      "/world/pakistan",
      "/world/panama",
      "/world/papua-new-guinea",
      "/world/peru",
      "/world/philippines",
      "/world/poland",
      "/world/portugal",
      "/world/qatar",
      "/world/romania",
      "/world/russia",
      "/world/rwanda",
      "/world/saudi-arabia",
      "/world/senegal",
      "/world/serbia",
      "/world/seychelles",
      "/world/sierra-leone",
      "/world/singapore",
      "/world/slovakia",
      "/world/slovenia",
      "/world/solomon-islands",
      "/world/somalia",
      "/world/south-africa",
      "/world/south-korea",
      "/world/south-sudan",
      "/world/spain",
      "/world/sri-lanka",
      "/world/sudan",
      "/world/sweden",
      "/world/switzerland",
      "/world/syria",
      "/world/taiwan",
      "/world/tajikistan",
      "/world/tanzania",
      "/world/thailand",
      "/world/timor-leste",
      "/world/trinidad-and-tobago",
      "/world/tunisia",
      "/world/turkey",
      "/world/turkmenistan",
      "/world/turks-and-caicos-islands",
      "/world/uganda",
      "/world/ukraine",
      "/world/united-arab-emirates",
      "/world/uruguay",
      "/world/usa",
      "/world/uzbekistan",
      "/world/venezuela",
      "/world/vietnam",
      "/world/yemen",
      "/world/zambia",
      "/world/zimbabwe",
      "/world/andorra",
      "/world/antigua-and-barbuda",
      "/world/bahamas",
      "/world/benin",
      "/world/bhutan",
      "/world/burkina-faso",
      "/world/cape-verde",
      "/world/comoros",
      "/world/congo",
      "/world/cote-d-ivoire",
      "/world/djibouti",
      "/world/dominica",
      "/world/equatorial-guinea",
      "/world/grenada",
      "/world/guinea-bissau",
      "/world/haiti",
      "/world/kiribati",
      "/world/lesotho",
      "/world/liberia",
      "/world/liechtenstein",
      "/world/macao",
      "/world/marshall-islands",
      "/world/micronesia",
      "/world/nauru",
      "/world/nicaragua",
      "/world/niger",
      "/world/the-occupied-palestinian-territories",
      "/world/palau",
      "/world/paraguay",
      "/world/samoa",
      "/world/sao-tome-and-principe",
      "/world/st-kitts-and-nevis",
      "/world/st-vincent-and-the-grenadines",
      "/world/suriname",
      "/world/swaziland",
      "/world/togo",
      "/world/tuvalu",
      "/world/vanuatu",
      "/world/bermuda",
      "/world/burundi",
      "/world/el-salvador",
      "/world/falkland-islands",
      "/world/guinea",
      "/world/st-helena-ascension-and-tristan-da-cunha",
      "/world/st-lucia",
      "/world/kyrgyzstan",
      "/world/pitcairn-island",
      "/world/chad",
      "/world/mauritania",
      "/world/american-samoa",
      "/world/aruba",
      "/world/bonaire-st-eustatius-saba",
      "/world/central-african-republic",
      "/world/curacao",
      "/world/french-guiana",
      "/world/french-polynesia",
      "/world/gabon",
      "/world/gibraltar",
      "/world/guadeloupe",
      "/world/martinique",
      "/world/mayotte",
      "/world/monaco",
      "/world/new-caledonia",
      "/world/reunion",
      "/world/san-marino",
      "/world/south-georgia-and-south-sandwich-islands",
      "/world/st-maarten",
      "/world/st-pierre-and-miquelon",
      "/world/tonga",
      "/world/wallis-and-futuna",
      "/world/western-sahara",
      "/world/st-martin",
    ]

    def all_taxons
      Services
        .publishing_api
        .get_content_items(
          document_type: 'taxon',
          per_page: 5000,
        ).to_h["results"]
    end

    world_taxons = all_taxons.select { |t| t["base_path"].starts_with?("/world") }
    world_taxons.each do |taxon|
      begin
        Services.publishing_api.publish(taxon["content_id"], "major") unless countries.include?(taxon["base_path"])
      rescue => e
        puts "Error: #{e.message}"
      end
    end

    world_taxons.each do |taxon|
      begin
        Services.publishing_api.publish(taxon["content_id"], "major") if countries.include?(taxon["base_path"])
      rescue => e
        puts "Error: #{e.message}"
      end
    end
  end
end
